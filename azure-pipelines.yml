trigger:
- main  # Adjust to your branch name if necessary

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self

- script: |
    echo "Building Docker image..."
    docker build -t my-custom-image:latest .
  displayName: 'Build Docker Image'

- script: |
    echo "Running Docker container with host network..."
    docker run --name my-container --network host -d my-custom-image:latest /bin/bash -c "while true; do sleep 30; done;"
  displayName: 'Run Docker Container'

- script: |
    echo "Starting ADB server and connecting to Android device..."
    docker exec my-container /bin/bash -c "adb start-server"
    docker exec my-container /bin/bash -c "adb devices"
    docker exec my-container /bin/bash -c "adb connect 10.39.8.149:5555"
  displayName: 'Connect ADB Device'

- script: |
    echo "Running Robot Framework tests..."
    docker exec my-container /bin/bash -c "cd /app/PartnerDevices_Automation && robot -d /results -i 237605 tests_teams_room"
  displayName: 'Run Robot Framework Tests'

- script: |
    echo "Copying test results from Docker container to host..."
    docker cp my-container:/results $(Build.ArtifactStagingDirectory)/results
  displayName: 'Copy Test Results to Host'

- script: |
    echo "Stopping Docker container..."
    docker stop my-container
    docker rm my-container
  displayName: 'Stop and Remove Docker Container'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/results'
    artifact: 'RobotFrameworkResults'
  displayName: 'Publish Test Results as Pipeline Artifact'
